{"version":3,"sources":["../src/index.js"],"names":["SCRIPT_ATTR","_getWidgetScriptTag","document","currentScript","scripts","getElementsByTagName","length","_getTagContent","tag","JSON","parse","textContent","e","render","Widget","root","habitatNode","widgetScriptTag","onreadystatechange","readyState","parentNode","preact","h","forEach","call","querySelectorAll","getAttribute","config","clone","id"],"mappings":"kRAGA,IAAMA,GAAc,gBAOdC,EAAsB,SAACC,SACpBA,GAASC,eAAmB,cAC7BC,GAAUF,EAASG,qBAAqB,gBACrCD,GAAQA,EAAQE,OAAS,OAS9BC,EAAiB,SAACC,aAEbC,MAAKC,MAAMF,EAAIG,aACtB,MAAOC,SACA,QAQLC,EAAS,SAACC,MACVC,GAAAA,OAEAC,EAAAA,OAGEC,EAAkBhB,EAAoBC,mBAInCgB,mBAAqB,WACA,gBAAxBhB,SAASiB,YAAwD,aAAxBjB,SAASiB,aAAAA,EACtCF,EAAgBG,aAEvBP,OACLQ,EAAOC,EACLR,GAEFE,EACAD,MAIEQ,QAAQC,KACVtB,SAASuB,iBAAiB,gBACxB,SAAAjB,MACMA,EAAIkB,aAAa,UAAY1B,EAAAA,IAG7B2B,GAASpB,EAAeC,SACvBmB,IAAWA,EAAOC,MAGnBD,EAAOC,QAAUZ,EAAYa,GACxBR,EAAOR,OACZQ,EAAOC,EACLR,GAEFN,EAAIY,WACJL,GAAAA,OARK","file":"habitat.min.js","sourcesContent":["import preact from 'preact'\n\n// default <script> `type` attribute for cloned widgets\nconst SCRIPT_ATTR = 'widget/config'\n\n/**\n * [_getWidgetScriptTag internal widget to provide the currently executed script]\n * @param  {document} document [Browser document object]\n * @return {HTMLElement}     [script Element]\n */\nconst _getWidgetScriptTag = (document) => {\n  return document.currentScript || ((() => {\n    let scripts = document.getElementsByTagName('script')\n    return scripts[scripts.length - 1]\n  }))()\n}\n\n/**\n * [_getTagContent internal function gets the content of script tag]\n * @param  {HTMLElement} tag [script tag]\n * @return {Object}     [Valid JavaScript Object]\n */\nconst _getTagContent = (tag) => {\n  try {\n    return JSON.parse(tag.textContent)\n  } catch (e) {\n    return null\n  }\n}\n\n/**\n * [render the same Preact render function with some helpers]\n * @param  {[Function / Componenr]} Widget [Preact component]\n */\nconst render = (Widget) => {\n  let root\n  // DOM element where main widget going to be rendered\n  let habitatNode\n  // this has to be outside ready state chage\n  // other than that we will not be able to know which script is getting executed\n  const widgetScriptTag = _getWidgetScriptTag(document)\n\n  // In case we need to clone the widget\n  // All DOM has to be loaded\n  document.onreadystatechange = function () {\n    if (document.readyState === 'interactive' || document.readyState === 'complete') {\n      habitatNode = widgetScriptTag.parentNode\n      // render main widget\n      preact.render(\n        preact.h(\n          Widget\n        ),\n        habitatNode,\n        root\n      )\n\n      // check for clones\n      ;[].forEach.call(\n        document.querySelectorAll('script[type]'),\n          tag => {\n            if (tag.getAttribute('type') !== SCRIPT_ATTR) {\n              return\n            }\n            let config = _getTagContent(tag)\n            if (!config || !config.clone) {\n              return null\n            }\n            if (config.clone === habitatNode.id) {\n              return preact.render(\n                preact.h(\n                  Widget\n                ),\n                tag.parentNode,\n                root\n              )\n            }\n          }\n      )\n    }\n  }\n}\n\nexport { _getWidgetScriptTag, _getTagContent, render }\n"]}