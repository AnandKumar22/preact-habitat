{"version":3,"file":"habitat.js","sources":["../src/lib/habitat.js","../src/index.js"],"sourcesContent":["const DEF_PROP_ATTR = 'data-prop';\nconst DEF_WIDGET_ID = 'data-widget';\nconst DEF_MOUNT = 'data-mount';\n\n/**\n * Capetalize every letter after `-`\n * @param  {String} str string\n * @return {String}     Capetalized string\n */\nconst _capetalize = str => {\n  return str.replace(/-([a-z])/ig, (all, letter) => {\n    return letter.toUpperCase();\n  });\n};\n\n/**\n * Get the props from a host element's data attributes\n * @param  {Element} tag The host element\n * @return {Object}     props object to be passed to the component\n */\nconst _habitatsProps = (tag, attr = DEF_PROP_ATTR) => {\n  let attrs = tag.attributes;\n  let props = {};\n\n  // ceck for another props attached to the tag\n  Object.keys(attrs).forEach(key => {\n    if (attrs.hasOwnProperty(key)) {\n      let dataAttrName = attrs[key].name;\n      let propName = dataAttrName.split(attr + `-`).pop();\n      propName = _capetalize(propName);\n      if (dataAttrName !== propName) {\n        let propValue = attrs[key].nodeValue;\n        props[propName] = propValue;\n      }\n    }\n  });\n  return props;\n};\n\n/**\n * Return array of 0 or more elements that will host our widget\n * @param  {id} attrId the data widget id attribute the host should have\n * @param  {document} scope  Docuemnt object or DOM Element as a scope\n * @return {Array}        Array of matching habitats\n */\nconst _habitatElms = (attrValue, attrKey = DEF_WIDGET_ID) => {\n  let hostNodes = [];\n  [].forEach.call(document.querySelectorAll(`[${attrKey}]`), queriedTag => {\n    if (attrValue === queriedTag.getAttribute(attrKey)) {\n      hostNodes.push(queriedTag);\n    }\n  });\n  return hostNodes;\n};\n\n/**\n * [_getWidgetScriptTag internal widget to provide the currently executed script]\n * @param  {document} document [Browser document object]\n * @return {HTMLElement}     [script Element]\n */\nconst _getWidgetScriptTag = () => {\n  return document.currentScript ||\n    (() => {\n      let scripts = document.getElementsByTagName('script');\n      return scripts[scripts.length - 1];\n    })();\n};\n\n// TODO: abstract and reuse with ./habitat.js _habitatsProps\nconst _getMountAttr = (script, attr = DEF_MOUNT) => {\n  let attrs = script.attributes;\n  let mountValue = null;\n  // ceck for another props attached to the tag\n  Object.keys(attrs).forEach(key => {\n    if (attrs.hasOwnProperty(key)) {\n      const dataAttrName = attrs[key].name;\n      if (dataAttrName === attr) {\n        mountValue = attrs[key].nodeValue;\n      }\n    }\n  });\n  return mountValue;\n};\n\nconst _isReady = () => {\n  return (!document.attachEvent && document.readyState === 'interactive' || document.readyState === 'complete')\n}\n\nexport {\n  _habitatsProps,\n  _habitatElms,\n  _getWidgetScriptTag,\n  _getMountAttr,\n  _capetalize,\n  _isReady\n};\n","import preact from 'preact';\n\nimport {\n  _habitatElms,\n  _habitatsProps,\n  _getMountAttr,\n  _getWidgetScriptTag,\n  _isReady\n} from './lib/habitat';\n\nconst habitat = Widget => {\n\n  let widget = Widget;\n  let hasRendered = false; // flag to not render twice if document state has changed\n  let root = null;\n  let currentScript = _getWidgetScriptTag(); // get current script\n\n  let mountTo = _getMountAttr(currentScript);\n\n  /**\n   * private _render function that will be queued if the DOM is not render\n   * and executed immeidatly if DOM is ready\n   */\n  let _render = () => {\n    let habitats = null;\n    if (mountTo) {\n      habitats = _habitatElms(mountTo);\n    } else {\n      habitats = [].concat(currentScript.parentNode);\n    }\n    habitats.forEach(elm => {\n      let hostNode = elm;\n      let props = _habitatsProps(elm) || {};\n      return preact.render(preact.h(widget, props), hostNode, root);\n    });\n  };\n\n  let render = () => {\n    if(_isReady() && !hasRendered) {\n      hasRendered = true;\n      return _render();\n    } else {\n      document.onreadystatechange = () => {\n        if (_isReady() && !hasRendered) {\n          hasRendered = true;\n          return _render();\n        }\n      };\n    }\n  };\n\n  return { render };\n};\n\nexport default habitat;\n"],"names":["DEF_PROP_ATTR","DEF_WIDGET_ID","DEF_MOUNT","_capetalize","str","replace","all","letter","toUpperCase","_habitatsProps","tag","attr","attrs","attributes","props","keys","forEach","hasOwnProperty","key","dataAttrName","name","propName","split","pop","propValue","nodeValue","_habitatElms","attrValue","attrKey","hostNodes","call","document","querySelectorAll","queriedTag","getAttribute","push","_getWidgetScriptTag","currentScript","scripts","getElementsByTagName","length","_getMountAttr","script","mountValue","_isReady","attachEvent","readyState","habitat","widget","Widget","hasRendered","root","mountTo","_render","habitats","concat","parentNode","hostNode","elm","preact","render","h","onreadystatechange"],"mappings":"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"}